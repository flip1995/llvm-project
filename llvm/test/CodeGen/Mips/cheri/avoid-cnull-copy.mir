# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# Check that we can remove the redundant copy of $CNULL
# This was previously generating a stack spill of $c18 even though it's not necessary
# TODO: it might make more sense to remove the redundant copies earlier than MachineCopyPropagation, but for now this works.
# RUN: %cheri_purecap_llc -cheri-cap-table-abi=pcrel %s -verify-machineinstrs -run-pass=machine-cp -o - | FileCheck %s
--- |
  target datalayout = "E-m:e-pf200:128:128:128:64-i8:8:32-i16:16:32-i64:64-n32:64-S128-A200-P200-G200"
  target triple = "cheri-unknown-freebsd"
  declare i32 @b() addrspace(200) #0
  ; Function Attrs: nounwind
  define i32 @a(...) addrspace(200) #0 {
    %ret = call i32 @b()
    ret i32 %ret
  }

  attributes #0 = { nounwind }

...
---
name:            a
alignment:       8
exposesReturnsTwice: false
legalized:       false
regBankSelected: false
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
registers:       []
liveins:         []
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        true
  stackProtector:  ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:
  - { id: 0, type: default, offset: 0, size: 8, alignment: 16, stack-id: default,
      isImmutable: true, isAliased: false, callee-saved-register: '', callee-saved-restored: true,
      debug-info-variable: '', debug-info-expression: '', debug-info-location: '' }
stack:           []
callSites:       []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.0 (%ir-block.0):
    ; CHECK-LABEL: name: a
    ; CHECK: renamable $c1 = PseudoPccRelativeAddressPostRA &_CHERI_CAPABILITY_TABLE_, implicit-def dead early-clobber renamable $at_64
    ; CHECK: ADJCALLSTACKCAPDOWN 0, 0, implicit-def dead $c11, implicit $c11
    ; CHECK: renamable $c12 = LOADCAP_BigImm target-flags(mips-captable20-call) @b, killed renamable $c1 :: (load (s128) from call-entry @b)
    ; CHECK: $c13 = COPY $cnull
    ; CHECK: CapJumpLinkPseudo $c12, csr_cheri_purecap, implicit-def dead $c17, implicit-def dead $c26, implicit killed $c13, implicit-def $c11, implicit-def $v0
    ; CHECK: ADJCALLSTACKCAPUP 0, 0, implicit-def dead $c11, implicit $c11
    ; CHECK: $c13 = COPY $cnull
    ; CHECK: CapRetPseudo implicit $v0, implicit killed $c13
    renamable $c1 = PseudoPccRelativeAddressPostRA &_CHERI_CAPABILITY_TABLE_, implicit-def dead early-clobber renamable $at_64
    ADJCALLSTACKCAPDOWN 0, 0, implicit-def dead $c11, implicit $c11
    renamable $c12 = LOADCAP_BigImm target-flags(mips-captable20-call) @b, killed renamable $c1 :: (load (s128) from call-entry @b)
    renamable $c18 = COPY $cnull
    $c13 = COPY renamable $c18
    CapJumpLinkPseudo $c12, csr_cheri_purecap, implicit-def dead $c17, implicit-def dead $c26, implicit killed $c13, implicit-def $c11, implicit-def $v0
    ADJCALLSTACKCAPUP 0, 0, implicit-def dead $c11, implicit $c11
    $c13 = COPY killed renamable $c18
    CapRetPseudo implicit $v0, implicit killed $c13

...
