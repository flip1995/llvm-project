; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: sed 's/addrspace(200)/addrspace(0)/g' %s | %cheri128_llc -target-abi n64 -relocation-model=pic -o - | FileCheck %s -check-prefix MIPS
; RUN: %cheri128_purecap_llc -O2 %s -o - | FileCheck %s -check-prefix PURECAP

declare i32 @func(i8 addrspace(200)*) local_unnamed_addr addrspace(200) #0

; This previously generated the full pc-relative _CHERI_CAPABILITY_TABLE_ address computation
; in the entry BB even though it is only used in the call_func BB
; The N64 codegen can move (some of) the $gp-computation into the other basic block
define i32 @test_no_cgp_in_false_path(i1 %arg) local_unnamed_addr addrspace(200) #0 {
; MIPS-LABEL: test_no_cgp_in_false_path:
; MIPS:       # %bb.0: # %entry
; MIPS-NEXT:    lui $1, %hi(%neg(%gp_rel(test_no_cgp_in_false_path)))
; MIPS-NEXT:    sll $2, $4, 0
; MIPS-NEXT:    andi $3, $2, 1
; MIPS-NEXT:    beqz $3, .LBB0_2
; MIPS-NEXT:    daddu $2, $1, $25
; MIPS-NEXT:  # %bb.1: # %call_func
; MIPS-NEXT:    daddiu $sp, $sp, -[[#STACKFRAME_SIZE:]]
; MIPS-NEXT:    sd $ra, 8($sp) # 8-byte Folded Spill
; MIPS-NEXT:    sd $gp, 0($sp) # 8-byte Folded Spill
; MIPS-NEXT:    daddiu $gp, $2, %lo(%neg(%gp_rel(test_no_cgp_in_false_path)))
; MIPS-NEXT:    ld $25, %call16(func)($gp)
; MIPS-NEXT:    .reloc .Ltmp0, R_MIPS_JALR, func
; MIPS-NEXT:  .Ltmp0:
; MIPS-NEXT:    jalr $25
; MIPS-NEXT:    daddiu $4, $zero, 0
; MIPS-NEXT:    ld $gp, 0($sp) # 8-byte Folded Reload
; MIPS-NEXT:    ld $ra, 8($sp) # 8-byte Folded Reload
; MIPS-NEXT:    daddiu $sp, $sp, [[#STACKFRAME_SIZE]]
; MIPS-NEXT:  .LBB0_2: # %exit
; MIPS-NEXT:    jr $ra
; MIPS-NEXT:    addiu $2, $zero, 123
;
; PURECAP-LABEL: test_no_cgp_in_false_path:
; PURECAP:       # %bb.0: # %entry
; PURECAP-NEXT:    sll $1, $4, 0
; PURECAP-NEXT:    andi $1, $1, 1
; PURECAP-NEXT:    beqz $1, .LBB0_2
; PURECAP-NEXT:    nop
; PURECAP-NEXT:  # %bb.1: # %call_func
; PURECAP-NEXT:    cincoffset $c11, $c11, -[[#STACKFRAME_SIZE:]]
; PURECAP-NEXT:    csc $c17, $zero, 0($c11)
; PURECAP-NEXT:    lui $1, %pcrel_hi(_CHERI_CAPABILITY_TABLE_-8)
; PURECAP-NEXT:    daddiu $1, $1, %pcrel_lo(_CHERI_CAPABILITY_TABLE_-4)
; PURECAP-NEXT:    cgetpccincoffset $c1, $1
; PURECAP-NEXT:    clcbi $c12, %capcall20(func)($c1)
; PURECAP-NEXT:    cjalr $c12, $c17
; PURECAP-NEXT:    cgetnull $c3
; PURECAP-NEXT:    clc $c17, $zero, 0($c11)
; PURECAP-NEXT:    cincoffset $c11, $c11, [[#STACKFRAME_SIZE]]
; PURECAP-NEXT:  .LBB0_2: # %exit
; PURECAP-NEXT:    cjr $c17
; PURECAP-NEXT:    addiu $2, $zero, 123
entry:                                       ; preds = %entry
  %alloca = alloca [16 x i8], align 16, addrspace(200)
  br i1 %arg, label %call_func, label %exit

call_func:
  %call = call signext i32 @func(i8 addrspace(200)* null) #1
  br label %exit

exit:
  ret i32 123
}

attributes #0 = { nounwind }
attributes #1 = { nounwind }
