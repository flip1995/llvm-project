; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: %cheri128_purecap_llc -o - %s | FileCheck %s

@.str = private unnamed_addr addrspace(200) constant [18 x i8] c"ASSERTION FAILED \00", align 1

; Function Attrs: nounwind
declare void @llvm.memcpy.p200i8.p200i8.i64(i8 addrspace(200)* nocapture writeonly, i8 addrspace(200)* nocapture readonly, i64, i1) addrspace(200) #1
define void @_Z1av(i8 addrspace(200)* %dst) local_unnamed_addr addrspace(200) nounwind {
; CHECK-LABEL: _Z1av:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    cincoffset $c11, $c11, -[[STACKFRAME_SIZE:16|32]]
; CHECK-NEXT:    csc $c17, $zero, 0($c11)
; CHECK-NEXT:    lui $1, %pcrel_hi(_CHERI_CAPABILITY_TABLE_-8)
; CHECK-NEXT:    daddiu $1, $1, %pcrel_lo(_CHERI_CAPABILITY_TABLE_-4)
; CHECK-NEXT:    cgetpccincoffset $c1, $1
; CHECK-NEXT:    clcbi $c4, %captab20(.L.str)($c1)
; CHECK-NEXT:    clcbi $c12, %capcall20(memcpy)($c1)
; CHECK-NEXT:    cjalr $c12, $c17
; CHECK-NEXT:    daddiu $4, $zero, 17
; CHECK-NEXT:    clc $c17, $zero, 0($c11)
; CHECK-NEXT:    cjr $c17
; CHECK-NEXT:    cincoffset $c11, $c11, [[STACKFRAME_SIZE]]
entry:
  ; This should call memcpy since its > CAP_SIZE and not aligned
  ; TODO: could notice that this is a constant value without any capabilities and inline it?
  tail call void @llvm.memcpy.p200i8.p200i8.i64(i8 addrspace(200)* align 536870912 %dst, i8 addrspace(200)* align 1 getelementptr inbounds ([18 x i8], [18 x i8] addrspace(200)* @.str, i64 0, i64 0), i64 17, i1 false)
  ret void
}
