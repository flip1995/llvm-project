; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: %cheri128_llc < %s | FileCheck %s

; StoreViaCap/StoreViaCapScaled used to be of the form:
;
;  [(storeType
;     (CapRegType (ptradd CheriOpnd0IsDDC:$cb,
;                         (add GPR64Opnd:$rt, (i64 immfrag:$offset)))),
;     RC:$rs)]
;
; Most of these are impossible to generate, since storeType is normally a
; truncstoreiX, which will never be generated when storing a capability (or,
; for hard float, a normal store, but RC will be a floating-point type).
; However, CAPSTORE64, given GPRs are 64-bit, uses a normal store, which we can
; generate. This test used to erroneously produce:
;
;   bad_capstore64:
;   # %bb.0:
;     jr $ra
;     csd $5, $4, 8($c3)
define void @bad_capstore64(i8 addrspace(200)* %cb, i64 %rt, i8 addrspace(200)** %rs) {
; CHECK-LABEL: bad_capstore64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    daddiu $1, $4, 8
; CHECK-NEXT:    cincoffset $c1, $c3, $1
; CHECK-NEXT:    jr $ra
; CHECK-NEXT:    csc $c1, $5, 0($ddc)
  %add = add i64 %rt, 8
  %ptradd = getelementptr i8, i8 addrspace(200)* %cb, i64 %add
  store i8 addrspace(200)* %ptradd, i8 addrspace(200)** %rs
  ret void
}
