; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: %cheri_llc %s -o - | FileCheck %s

; Function Attrs: nounwind
define i8 addrspace(200)* @select(i8 addrspace(200)* %b, i8 addrspace(200)* %c) nounwind {
; CHECK-LABEL: select:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    daddiu $sp, $sp, -64
; CHECK-NEXT:    sd $ra, 56($sp) # 8-byte Folded Spill
; CHECK-NEXT:    sd $fp, 48($sp) # 8-byte Folded Spill
; CHECK-NEXT:    move $fp, $sp
; CHECK-NEXT:    daddiu $1, $zero, -32
; CHECK-NEXT:    and $sp, $sp, $1
; CHECK-NEXT:    daddiu $2, $sp, 32
; CHECK-NEXT:    csc $c3, $2, 0($ddc)
; CHECK-NEXT:    daddiu $3, $sp, 0
; CHECK-NEXT:    cleu $1, $c4, $c3
; CHECK-NEXT:    bnez $1, .LBB0_2
; CHECK-NEXT:    csc $c4, $3, 0($ddc)
; CHECK-NEXT:  # %bb.1: # %cond.true
; CHECK-NEXT:    j .LBB0_3
; CHECK-NEXT:    clc $c3, $2, 0($ddc)
; CHECK-NEXT:  .LBB0_2: # %cond.false
; CHECK-NEXT:    clc $c3, $3, 0($ddc)
; CHECK-NEXT:  .LBB0_3: # %cond.end
; CHECK-NEXT:    move $sp, $fp
; CHECK-NEXT:    ld $fp, 48($sp) # 8-byte Folded Reload
; CHECK-NEXT:    ld $ra, 56($sp) # 8-byte Folded Reload
; CHECK-NEXT:    jr $ra
; CHECK-NEXT:    daddiu $sp, $sp, 64
entry:
  %b.addr = alloca i8 addrspace(200)*, align 32
  %c.addr = alloca i8 addrspace(200)*, align 32
  store i8 addrspace(200)* %b, i8 addrspace(200)** %b.addr, align 32
  store i8 addrspace(200)* %c, i8 addrspace(200)** %c.addr, align 32
  %0 = load i8 addrspace(200)*, i8 addrspace(200)** %b.addr, align 32
  %1 = load i8 addrspace(200)*, i8 addrspace(200)** %c.addr, align 32
  %cmp = icmp ult i8 addrspace(200)* %0, %1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %2 = load i8 addrspace(200)*, i8 addrspace(200)** %b.addr, align 32
  br label %cond.end

cond.false:                                       ; preds = %entry
  %3 = load i8 addrspace(200)*, i8 addrspace(200)** %c.addr, align 32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8 addrspace(200)* [ %2, %cond.true ], [ %3, %cond.false ]
  ret i8 addrspace(200)* %cond
}

