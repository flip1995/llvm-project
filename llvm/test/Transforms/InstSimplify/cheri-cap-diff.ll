; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -instsimplify -S %s -o - | FileCheck %s

target datalayout = "E-m:e-pf200:128:128:128:64-i8:8:32-i16:16:32-i64:64-n32:64-S128-A200-P200-G200"
target triple = "cheri-unknown-freebsd"

declare i64 @llvm.cheri.cap.diff.i64(i8 addrspace(200)*, i8 addrspace(200)*) addrspace(200) #1


define i64 @ptrdiff1(i8 addrspace(200)* %ptr) {
; CHECK-LABEL: @ptrdiff1(
; CHECK-NEXT:    ret i64 42
;
  %first = getelementptr inbounds i8, i8 addrspace(200)* %ptr, i32 0
  %last = getelementptr inbounds i8, i8 addrspace(200)* %ptr, i32 42
  %diff = call i64 @llvm.cheri.cap.diff.i64(i8 addrspace(200)* %last, i8 addrspace(200)* %first)
  ret i64 %diff
}

define i64 @ptrdiff2(i8 addrspace(200)* %ptr) {
; CHECK-LABEL: @ptrdiff2(
; CHECK-NEXT:    ret i64 42
;
  %first1 = getelementptr inbounds i8, i8 addrspace(200)* %ptr, i32 0
  %first2 = getelementptr inbounds i8, i8 addrspace(200)* %first1, i32 1
  %first3 = getelementptr inbounds i8, i8 addrspace(200)* %first2, i32 2
  %first4 = getelementptr inbounds i8, i8 addrspace(200)* %first3, i32 4
  %last1 = getelementptr inbounds i8, i8 addrspace(200)* %first2, i32 48
  %last2 = getelementptr inbounds i8, i8 addrspace(200)* %last1, i32 8
  %last3 = getelementptr inbounds i8, i8 addrspace(200)* %last2, i32 -4
  %last4 = getelementptr inbounds i8, i8 addrspace(200)* %last3, i32 -4
  %diff = call i64 @llvm.cheri.cap.diff.i64(i8 addrspace(200)* %last4, i8 addrspace(200)* %first4)

  ret i64 %diff
}

define i64 @ptrdiff3(i8 addrspace(200)* %ptr) {
; Don't bother with non-inbounds GEPs.
; CHECK-LABEL: @ptrdiff3(
; CHECK-NEXT:    [[LAST:%.*]] = getelementptr i8, i8 addrspace(200)* [[PTR:%.*]], i32 42
; CHECK-NEXT:    [[DIFF:%.*]] = call i64 @llvm.cheri.cap.diff.i64(i8 addrspace(200)* [[LAST]], i8 addrspace(200)* [[PTR]])
; CHECK-NEXT:    ret i64 [[DIFF]]
;
  %first = getelementptr i8, i8 addrspace(200)* %ptr, i32 0
  %last = getelementptr i8, i8 addrspace(200)* %ptr, i32 42
  %diff = call i64 @llvm.cheri.cap.diff.i64(i8 addrspace(200)* %last, i8 addrspace(200)* %first)
  ret i64 %diff
}

%struct.ham = type { i32, [2 x [2 x i32]] }

@global = internal addrspace(200) global %struct.ham zeroinitializer, align 4

define i64 @ptrdiff5() nounwind {
; CHECK-LABEL: @ptrdiff5(
; CHECK-NEXT:  bb:
; CHECK-NEXT:    ret i64 0
;
bb:
  %tmp = getelementptr inbounds %struct.ham, %struct.ham addrspace(200)* @global, i32 0, i32 1
  %tmp1 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]] addrspace(200)* %tmp, i32 0, i32 0
  %tmp2 = bitcast [2 x i32] addrspace(200)* %tmp1 to i8 addrspace(200)*
  %tmp4 = getelementptr inbounds %struct.ham, %struct.ham addrspace(200)* @global, i32 0, i32 1
  %tmp5 = getelementptr inbounds [2 x [2 x i32]], [2 x [2 x i32]] addrspace(200)* %tmp4, i32 0, i32 0
  %tmp6 = bitcast [2 x i32] addrspace(200)* %tmp5 to i8 addrspace(200)*
  %diff = call i64 @llvm.cheri.cap.diff.i64(i8 addrspace(200)* %tmp2, i8 addrspace(200)* %tmp6)
  ret i64 %diff
}
