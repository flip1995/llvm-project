// NOTE: Assertions have been autogenerated by utils/update_cc_test_checks.py UTC_ARGS: --function-signature
// This previously crashed because of wrong value of SuitableAlign in Mips.h
// RUN: %cheri128_purecap_cc1 -fexceptions -fcxx-exceptions -o - -O0 -emit-llvm -disable-O0-optnone %s | FileCheck %s
class a {
public:
  virtual ~a();
};
const int i = __BIGGEST_ALIGNMENT__;
const int *j = &i;
// CHECK-LABEL: define {{[^@]+}}@_Z1bv
// CHECK-SAME: () addrspace(200) [[ATTR0:#.*]] {
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[EXCEPTION:%.*]] = call i8 addrspace(200)* @__cxa_allocate_exception(i64 16) [[ATTR4:#.*]]
// CHECK-NEXT:    [[TMP0:%.*]] = bitcast i8 addrspace(200)* [[EXCEPTION]] to [[CLASS_A:%.*]] addrspace(200)*
// CHECK-NEXT:    [[TMP1:%.*]] = bitcast [[CLASS_A]] addrspace(200)* [[TMP0]] to i8 addrspace(200)*
// CHECK-NEXT:    call void @llvm.memset.p200i8.i64(i8 addrspace(200)* align 16 [[TMP1]], i8 0, i64 16, i1 false)
// CHECK-NEXT:    call void @_ZN1aC1Ev(%class.a addrspace(200)* nonnull dereferenceable(16) [[TMP0]]) [[ATTR4]]
// CHECK-NEXT:    call void @__cxa_throw(i8 addrspace(200)* [[EXCEPTION]], i8 addrspace(200)* bitcast (i8 addrspace(200)* addrspace(200)* @_ZTI1a to i8 addrspace(200)*), i8 addrspace(200)* bitcast (void (%class.a addrspace(200)*) addrspace(200)* @_ZN1aD1Ev to i8 addrspace(200)*)) [[ATTR5:#.*]]
// CHECK-NEXT:    unreachable
//
void b() {
  throw a();
}
